name: Test and Merge Development to Main

on:
  push:
    branches:
      - development   # Se activa cuando hay un push a la rama 'development'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Revisar el código del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar el entorno de Node.js (si usas Node.js, por ejemplo)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Especifica la versión de Node.js que estés utilizando

      # Paso 3: Instalar las dependencias
      - name: Install dependencies
        run: |
          npm install  # O el comando para instalar las dependencias, dependiendo de tu proyecto

      # Paso 4: Ejecutar los tests
      - name: Run tests
        run: |
          npm test  # O el comando para correr los tests en tu proyecto

  merge:
    runs-on: ubuntu-latest
    needs: test  # Este trabajo depende del trabajo 'test', solo se ejecutará si 'test' es exitoso

    steps:
      # Paso 1: Revisar el código del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar Git (nombre de usuario y correo)
      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

      # Paso 3: Obtener los últimos cambios de las ramas
      - name: Fetch latest branches
        run: |
          git fetch origin main

      # Paso 4: Hacer el merge de development a main, resolviendo conflictos automáticamente con "theirs" (favor de development)
      - name: Merge development into main
        run: |
          git checkout main
          git merge origin/development --allow-unrelated-histories --no-ff -X theirs -m "Merge development into main"
          
          # Verificar si hay conflictos
          if git ls-files -u | grep -q .; then
            echo "Merge conflict detected in the following files:"
            git ls-files -u
            exit 1  # Termina el flujo de trabajo si hay conflictos
          fi
          
      # Paso 5: Subir los cambios a la rama main
      - name: Push changes
        run: |
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Usa el token de GitHub para autenticación
